name: Olympix Mutation Testing

# - runs the olympix mutation testing on all solidity contracts inside the src/ folder
# - evaluates test suite quality by introducing code mutations and checking if tests catch them
# - always scans all solidity files in src/ to maintain consistent GitHub Code Scanning state
# - uploads mutation testing results to github code scanning for review and discussion within the PR

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'src/**/*.sol'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  checks: write

jobs:
  mutation-testing:
    name: Check for Solidity Files
    runs-on: ubuntu-latest
    outputs:
      SHOULD_RUN: ${{ steps.check-files.outputs.SHOULD_RUN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check for Solidity Files
        id: check-files
        run: |
          # Check if there are any Solidity files in src/
          files=$(find src/ -name "*.sol" -type f 2>/dev/null || true)
          
          if [[ -n "$files" && $(echo "$files" | wc -w) -gt 0 ]]; then
            echo "SHOULD_RUN=true" >> $GITHUB_OUTPUT
            echo "Found $(echo "$files" | wc -w) Solidity files to analyze"
          else
            echo "SHOULD_RUN=false" >> $GITHUB_OUTPUT
            echo "No Solidity files found in src/"
          fi

  # Process all files via directory scanning
  mutation-testing-execution:
    name: Mutation Testing
    runs-on: ubuntu-latest
    needs: mutation-testing
    if: needs.mutation-testing.outputs.SHOULD_RUN == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Processing Info
        run: |
          total_files=$(find src/ -name "*.sol" -type f | wc -l)
          echo "🔄 Running mutation testing on all Solidity files in src/"
          echo "📁 Found $total_files files to analyze"
          echo "🚀 Using directory scanning to process all files in single execution"

      - name: Run Olympix Mutation Testing
        uses: olympix/mutation-test-generator@main
        env:
          OLYMPIX_API_TOKEN: ${{ secrets.OLYMPIX_API_TOKEN }}
          GITHUB_REPOSITORY_ID: ${{ github.repository_id }}
          OLYMPIX_GITHUB_COMMIT_HEAD_SHA: ${{ github.sha }}
          OPIX_DEBUG: true
        with:
          args: generate-mutation-tests -w . --include-dot-env

      - name: Success Summary
        run: |
          total_files=$(find src/ -name "*.sol" -type f | wc -l)
          echo "✅ Mutation testing completed successfully"
          echo "📁 Processed $total_files files via directory scanning"
          echo "🔍 Results uploaded to GitHub Code Scanning"
          echo "📋 Check the Security tab for mutation testing alerts" 